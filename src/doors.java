//Course :  Advanced Programming language
//Project - 2 : Let's make a deal
//Team : Divya shree, Gyaneshwar Malba
//Date : 11/02/2016
/*The following code creates a JFrame for MontyHall Problem. In the program there are 3 doors behind one of them has a hidden prize(car image).
The high probablity of winning is only when you swap the choosen door, because one of the non-winning door is revealed.
Thus, providing high probablity of choosing the winning door.
*/ 
package dealapp;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author divyashree
 */
public class dealapp extends javax.swing.JFrame {

    //Initially assigning all door image to one pic say here pic1.
    final String[] Imagepath = new String[]{"pic1.jpg","pic1.jpg","pic1.jpg"};
    
    String selDoor,opDoor;
    int carpos;
    //Method to assign car image randomly and also to assign the third image.
    public void genRandomImage(){
    Random rand=new Random();
    carpos=rand.nextInt(3);
    Imagepath[carpos]="pic3.jpg";
    //assign the third image
        for (int i = 0; i < 3; i++) {
            if (i!=carpos) {
                Imagepath[i]="pic2.jpg";
                break;
            }
        }
    }
    /**
     * Creates new form dealapp
     */
    public dealapp() {
        initComponents();
        genRandomImage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        chosenDoorTextField = new javax.swing.JTextField();
        chosenDoorLabel = new javax.swing.JLabel();
        KeepButton = new javax.swing.JButton();
        SwapButton = new javax.swing.JButton();
        PlayAgainButton = new javax.swing.JButton();
        winLable = new javax.swing.JLabel();
        winTextField = new javax.swing.JTextField();
        lostLabel = new javax.swing.JLabel();
        lostTextField = new javax.swing.JTextField();
        totalLabel = new javax.swing.JLabel();
        totalTextField = new javax.swing.JTextField();
        Door1 = new javax.swing.JButton();
        Door2 = new javax.swing.JButton();
        Door3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Let's Make A Deal!!");
        setBackground(new java.awt.Color(204, 204, 255));

        chosenDoorTextField.setEditable(false);
        chosenDoorTextField.setText("None");

        chosenDoorLabel.setText("Chosen Door :");

        KeepButton.setText("Keep");
        KeepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeepButtonActionPerformed(evt);
            }
        });

        SwapButton.setText("Swap");
        SwapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwapButtonActionPerformed(evt);
            }
        });

        PlayAgainButton.setText("Play Again");
        PlayAgainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayAgainButtonActionPerformed(evt);
            }
        });

        winLable.setText("Win");

        winTextField.setEditable(false);
        winTextField.setText("0");
        winTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winTextFieldActionPerformed(evt);
            }
        });

        lostLabel.setText("Lost");

        lostTextField.setEditable(false);
        lostTextField.setText("0");

        totalLabel.setText("Total");

        totalTextField.setEditable(false);
        totalTextField.setText("0");

        Door1.setText("Door - 1");
        Door1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Door1ActionPerformed(evt);
            }
        });

        Door2.setText("Door - 2");
        Door2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Door2ActionPerformed(evt);
            }
        });

        Door3.setText("Door - 3");
        Door3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Door3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(KeepButton)
                        .addGap(72, 72, 72)
                        .addComponent(SwapButton)
                        .addGap(122, 203, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(totalLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(winLable)
                                    .addComponent(lostLabel))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(winTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(lostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Door1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(chosenDoorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(chosenDoorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Door2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(PlayAgainButton)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(Door3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(47, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chosenDoorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chosenDoorLabel))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Door1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Door3, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addComponent(Door2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KeepButton)
                    .addComponent(SwapButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winLable)
                    .addComponent(winTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lostLabel)
                    .addComponent(PlayAgainButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalLabel)
                    .addComponent(totalTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        chosenDoorTextField.getAccessibleContext().setAccessibleName("ChosenTextField");
        chosenDoorLabel.getAccessibleContext().setAccessibleName("ChosenDoorLable");
        KeepButton.getAccessibleContext().setAccessibleName("KeepButton");
        SwapButton.getAccessibleContext().setAccessibleName("SwapButton");
        PlayAgainButton.getAccessibleContext().setAccessibleName("PlayAgainButton");
        winLable.getAccessibleContext().setAccessibleName("WinLable");
        winTextField.getAccessibleContext().setAccessibleName("WinTextField");
        lostLabel.getAccessibleContext().setAccessibleName("LostLable");
        lostTextField.getAccessibleContext().setAccessibleName("LostTextField");
        totalLabel.getAccessibleContext().setAccessibleName("TotalLable");
        totalTextField.getAccessibleContext().setAccessibleName("TotalTextField");

        pack();
    }// </editor-fold>                        

    private void KeepButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        if (Door1.isEnabled()|Door2.isEnabled()|Door3.isEnabled()) {
            totalTextField.setText(""+(Integer.parseInt(totalTextField.getText())+1));
        }
        SwapButton.setEnabled(false);
        int flag=0;
        //check door1 is a win or loss
        if (selDoor.equals("Door1")) {
            //win
            if (carpos==0) {
                flag=1;
                winTextField.setText(""+(Integer.parseInt(winTextField.getText())+1));
            } else {//loss
                flag=0;
                lostTextField.setText(""+(Integer.parseInt(lostTextField.getText())+1));
            }
        }
        //check door2 is a win or loss
        if (selDoor.equals("Door2")) {
            //win
            if (carpos==1) {
                flag=1;
                winTextField.setText(""+(Integer.parseInt(winTextField.getText())+1));
            } else {//loss
                flag=0;
                lostTextField.setText(""+(Integer.parseInt(lostTextField.getText())+1));
            }
        }
        //check door3 is a win or loss
        if (selDoor.equals("Door3")) {
            //win
            if (carpos==2) {
                flag=1;
                winTextField.setText(""+(Integer.parseInt(winTextField.getText())+1));
            } else {//loss
                flag=0;
                lostTextField.setText(""+(Integer.parseInt(lostTextField.getText())+1));
            }
        }
        //reveal the image behind all the door
        ImageIcon background =new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[0]));
        Door1.setIcon(background);
        Door1.setDisabledIcon(background);
        Door1.setText("");
        
        ImageIcon background1 =new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[1]));
        Door2.setIcon(background1);
        Door2.setDisabledIcon(background1);
        Door2.setText("");
        
        ImageIcon background2 =new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[2]));
        Door3.setIcon(background2);
        Door3.setDisabledIcon(background2);
        Door3.setText("");
        
        //Message for Win/Loss
        if (flag!=0) {
            JOptionPane.showMessageDialog(null, "Congratulations!!! Your prediction Won");
        } else {
            JOptionPane.showMessageDialog(null, "Sorry!!! Why don't you try again");
        }
    }                                          

    private void SwapButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        if (Door1.isEnabled()|Door2.isEnabled()|Door3.isEnabled()) {
            totalTextField.setText(""+(Integer.parseInt(totalTextField.getText())+1));
        }
        KeepButton.setEnabled(false);
        int flag=0;
        //Swap the selected door with the one which is not selected and reveal the prediction
        //if the selected door is door-1
        if (selDoor.equals("Door1")) {
            Door1.setBackground(Color.LIGHT_GRAY);
            //Swap Door1 with Door3
            if (opDoor.equals("Door2")) {
                //highlight button
                Door3.setBackground(Color.DARK_GRAY);
                chosenDoorTextField.setText("Door-3");            
                if (carpos==2) {//Win
                    flag=1;
                winTextField.setText(""+(Integer.parseInt(winTextField.getText())+1));
            } else {//loss
                flag=0;
                lostTextField.setText(""+(Integer.parseInt(lostTextField.getText())+1));
            }    
            }else{//Swap Door1 with Door2
                //highlight button
                Door2.setBackground(Color.DARK_GRAY);
                chosenDoorTextField.setText("Door-2");
                if (carpos==1) {//Win
                    flag=1;
                winTextField.setText(""+(Integer.parseInt(winTextField.getText())+1));
            } else {//loss
                flag=0;
                lostTextField.setText(""+(Integer.parseInt(lostTextField.getText())+1));
            }   
            }
        }
        //if the selected door is door-2
        if (selDoor.equals("Door2")) {
            Door2.setBackground(Color.LIGHT_GRAY);
            //Swap Door2 with Door3
            if (opDoor.equals("Door1")) {
                //highlight button
                Door3.setBackground(Color.DARK_GRAY);
                chosenDoorTextField.setText("Door-3");            
                if (carpos==2) {//Win
                    flag=1;
                winTextField.setText(""+(Integer.parseInt(winTextField.getText())+1));
            } else {//loss
                flag=0;
                lostTextField.setText(""+(Integer.parseInt(lostTextField.getText())+1));
            }    
            }else{
                //highlight button
                Door1.setBackground(Color.DARK_GRAY);
                chosenDoorTextField.setText("Door-1");
                if (carpos==0) {//Win
                    flag=1;
                winTextField.setText(""+(Integer.parseInt(winTextField.getText())+1));
            } else {//loss
                flag=0;
                lostTextField.setText(""+(Integer.parseInt(lostTextField.getText())+1));
            }   
            }
        }
        //if the selected door is door-3
        if (selDoor.equals("Door3")) {
            Door3.setBackground(Color.LIGHT_GRAY);
            //Swap Door3 with Door2
            if (opDoor.equals("Door2")) {
                //highlight button
                Door1.setBackground(Color.DARK_GRAY);
                chosenDoorTextField.setText("Door-1");            
                if (carpos==0) {//Win
                    flag=1;
                winTextField.setText(""+(Integer.parseInt(winTextField.getText())+1));
            } else {//loss
                flag=0;
                lostTextField.setText(""+(Integer.parseInt(lostTextField.getText())+1));
            }    
            }else{//Swap Door3 with Door1
                //highlight button
                Door2.setBackground(Color.DARK_GRAY);
                chosenDoorTextField.setText("Door-2");
                if (carpos==1) {//Win
                    flag=1;
                winTextField.setText(""+(Integer.parseInt(winTextField.getText())+1));
            } else {//loss
                flag=0;
                lostTextField.setText(""+(Integer.parseInt(lostTextField.getText())+1));
            }   
            }
        }
        //reveal the image behind all the door
        ImageIcon background =new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[0]));
        Door1.setIcon(background);
        Door1.setDisabledIcon(background);
        Door1.setText("");
        
        ImageIcon background1 =new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[1]));
        Door2.setIcon(background1);
        Door2.setDisabledIcon(background1);
        Door2.setText("");
        
        ImageIcon background2 =new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[2]));
        Door3.setIcon(background2);
        Door3.setDisabledIcon(background2);
        Door3.setText("");
        
        //Message for Win/Loss
        if (flag!=0) {
            JOptionPane.showMessageDialog(null, "Congratulations!!! Your prediction Won");
        } else {
            JOptionPane.showMessageDialog(null, "Sorry!!! Why don't you try again");
        }
    }                                          

    private void PlayAgainButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        chosenDoorTextField.setText(" ");
        if (!Door1.isEnabled())         Door1.setEnabled(true);
        if (!Door2.isEnabled())         Door2.setEnabled(true);
        if (!Door3.isEnabled())         Door3.setEnabled(true);
        if (!SwapButton.isEnabled())         SwapButton.setEnabled(true);
        if (!KeepButton.isEnabled())         KeepButton.setEnabled(true);
        
        Door1.setIcon(null);
        Door2.setIcon(null);
        Door3.setIcon(null);
        
        Door1.setDisabledIcon(null);
        Door2.setDisabledIcon(null);
        Door3.setDisabledIcon(null);
        
        Door1.setBackground(Color.LIGHT_GRAY);
        Door2.setBackground(Color.LIGHT_GRAY);
        Door3.setBackground(Color.LIGHT_GRAY);
        
        Door1.setText("Door-1");
        Door2.setText("Door-2");
        Door3.setText("Door-3");
        
        for (int i = 0; i < 3; i++) {
            Imagepath[i]="pic1.jpg";
        }
        genRandomImage();
        selDoor ="";
        opDoor="";
        chosenDoorTextField.setText("NONE");
    }                                               

    private void Door1ActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        chosenDoorTextField.setText("Door-1");
        Door1.setBackground(Color.DARK_GRAY);
        Door2.setEnabled(false);
        Door3.setEnabled(false);
        if (carpos==1) {
            Door2.setIcon(null);
            Door3.setIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[2])));
            Door3.setDisabledIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[2])));
            Door3.setText("");
            opDoor="Door3";
        } else {
            Door3.setIcon(null);
            Door2.setIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[1])));
            Door2.setDisabledIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[1])));
            Door2.setText("");
            opDoor="Door2";
        }
        selDoor="Door1";
    }                                     

    private void Door2ActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        chosenDoorTextField.setText("Door-2");
        Door2.setBackground(Color.DARK_GRAY);
        Door1.setEnabled(false);
        Door3.setEnabled(false);
        if (carpos==0) {
            Door1.setIcon(null);
            Door3.setIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[2])));
            Door3.setDisabledIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[2])));
            Door3.setText("");
            opDoor="Door3";
        } else {
            Door3.setIcon(null);
            Door1.setIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[0])));
            Door1.setDisabledIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[0])));
            Door1.setText("");
            opDoor="Door1";
        }
        selDoor="Door2";
    }                                     

    private void Door3ActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        chosenDoorTextField.setText("Door-3");
        Door3.setBackground(Color.DARK_GRAY);
        Door2.setEnabled(false);
        Door1.setEnabled(false);
        if (carpos==0) {
            Door1.setIcon(null);
            Door2.setIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[1])));
            Door2.setDisabledIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[1])));
            Door2.setText("");
            opDoor="Door2";
        } else {
            Door2.setIcon(null);
            Door1.setIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[0])));
            Door1.setDisabledIcon(new ImageIcon(getClass().getResource("/dealapp/appImages/"+Imagepath[0])));
            Door1.setText("");
            opDoor="Door1";
        }
        selDoor="Door3";
    }                                     

    private void winTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dealapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dealapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dealapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dealapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dealapp().setVisible(true);
            }
        });
        //calling the app class
        new dealapp();
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Door1;
    private javax.swing.JButton Door2;
    private javax.swing.JButton Door3;
    private javax.swing.JButton KeepButton;
    private javax.swing.JButton PlayAgainButton;
    private javax.swing.JButton SwapButton;
    private javax.swing.JLabel chosenDoorLabel;
    private javax.swing.JTextField chosenDoorTextField;
    private javax.swing.JLabel lostLabel;
    private javax.swing.JTextField lostTextField;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JTextField totalTextField;
    private javax.swing.JLabel winLable;
    private javax.swing.JTextField winTextField;
    // End of variables declaration                   
}
