//Course :  Advanced Programming language
//Project - 2 : Let's make a deal
//Team : Divyashree HB , Gyaneshwar Malba
//Date : 11/02/2016
/*The following code creates a JFrame for MontyHall Problem. In the program there are 3 doors behind one of them has a hidden prize(car image).
The high probablity of winning is only when you swap the choosen door, because one of the non-winning door is revealed.
Thus, providing high probablity of choosing the winning door.
*/ 

import java.awt.Color;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author divyashree
 */
public class doors extends javax.swing.JFrame{
     
final String[] IMAGE_PATHS = new String[]{"pic1.jpg","pic1.jpg","pic1.jpg"};//initilization goes here
int car;
String seldoor,opdoor;
/**Method to generate the random images between the doors**/
public void genrandomimage(){ 
Random random = new Random(); 

int carpos =random.nextInt(3);//randomly generate car position
IMAGE_PATHS[carpos]="pic3.jpg";
/**For loop to put the second goat image behind the door if there is no car**/
for(int i=0;i<3;i++){
if(i!=carpos){
    IMAGE_PATHS[i]="pic2.jpg";
    break;
}
}
car=carpos;
}
    /**
     * Creates new form doors
     */
    public doors() {
        initComponents();
        genrandomimage(); //randomly generate and assign image to door as the consturture intialize components      
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        winLabel = new javax.swing.JLabel();
        lostLabel = new javax.swing.JLabel();
        lossTextField = new javax.swing.JTextField();
        swapButton = new javax.swing.JButton();
        winTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        KeepButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        choosenText = new javax.swing.JTextField();
        againButton = new javax.swing.JButton();
        totalLabel = new javax.swing.JLabel();
        totalTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Let's Make a Deal");
        setIconImages(null);

        winLabel.setText("WIN");

        lostLabel.setText("LOST");

        lossTextField.setEditable(false);
        lossTextField.setText("0");
        lossTextField.setEnabled(false);
        lossTextField.setPreferredSize(new java.awt.Dimension(70, 20));

        swapButton.setText("Swap");
        swapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swapButtonActionPerformed(evt);
            }
        });

        winTextField.setEditable(false);
        winTextField.setText("0");
        winTextField.setEnabled(false);
        winTextField.setPreferredSize(new java.awt.Dimension(70, 20));

        jButton1.setBackground(Color.LIGHT_GRAY);
        jButton1.setText("Door1");
        jButton1.setDefaultCapable(false);
        jButton1.setMaximumSize(new java.awt.Dimension(120, 120));
        jButton1.setMinimumSize(new java.awt.Dimension(120, 120));
        jButton1.setPreferredSize(new java.awt.Dimension(120, 120));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(Color.LIGHT_GRAY);
        jButton2.setText("Door2");
        jButton2.setMaximumSize(new java.awt.Dimension(120, 120));
        jButton2.setMinimumSize(new java.awt.Dimension(120, 120));
        jButton2.setPreferredSize(new java.awt.Dimension(120, 120));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(Color.LIGHT_GRAY);
        jButton3.setText("Door3");
        jButton3.setMaximumSize(new java.awt.Dimension(120, 120));
        jButton3.setMinimumSize(new java.awt.Dimension(120, 120));
        jButton3.setPreferredSize(new java.awt.Dimension(120, 120));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        KeepButton.setText("Keep");
        KeepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeepButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Choosen Door :");

        choosenText.setEditable(false);
        choosenText.setEnabled(false);

        againButton.setText("Play Again");
        againButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                againButtonActionPerformed(evt);
            }
        });

        totalLabel.setText("Total");

        totalTextField.setEditable(false);
        totalTextField.setText("0");
        totalTextField.setEnabled(false);
        totalTextField.setPreferredSize(new java.awt.Dimension(70, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 68, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(winLabel)
                                    .addComponent(lostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lossTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(againButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(choosenText, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(KeepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(swapButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(choosenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KeepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(swapButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winLabel)
                    .addComponent(winTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(againButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lostLabel)
                            .addComponent(lossTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalLabel)
                            .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//action performed when door-2(button2) is clicked
//This method creates second door and sets the background color with randomly changing the image and has event as parameter
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        choosenText.setText("Door-2");
        jButton2.setBackground(Color.DARK_GRAY);//highlight button
              
        //dislay a goat image
         if(car==0){
             jButton1.setIcon(null);
              jButton1.setEnabled(false);//cant click button1 for better game experiance
            jButton3.setIcon( new ImageIcon("src\\"+IMAGE_PATHS[2]));
            if(!jButton1.isEnabled()) jButton3.setDisabledIcon( new ImageIcon("src\\"+IMAGE_PATHS[2]));
            opdoor="Door3";
        }
         else{
             jButton3.setIcon(null);
              jButton3.setEnabled(false);
                 jButton1.setIcon(new ImageIcon("src\\"+IMAGE_PATHS[0]));
                if(!jButton3.isEnabled()) jButton1.setDisabledIcon(new ImageIcon("src\\"+IMAGE_PATHS[0]));
                opdoor="Door1";
        }
        
        seldoor="Door2";

    }//GEN-LAST:event_jButton2ActionPerformed
//action performed when door-1(button1) is clicked
//This method creates first door and sets the background color with randomly changing the image and has event as parameter
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        choosenText.setText("Door-1");
        jButton1.setBackground(Color.DARK_GRAY);
                jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        if(car==1){
            jButton2.setIcon(null);
                jButton3.setIcon(new ImageIcon("src\\"+IMAGE_PATHS[2]));
            jButton3.setDisabledIcon(new ImageIcon("src\\"+IMAGE_PATHS[2]));
            
            opdoor="Door3";
        }
        else{
         jButton3.setIcon(null);
        jButton2.setIcon(new ImageIcon("src\\"+IMAGE_PATHS[1]));
        jButton2.setDisabledIcon(new ImageIcon("src\\"+IMAGE_PATHS[1]));
        
        opdoor="Door2";
        }
        
        seldoor="Door1";

    }//GEN-LAST:event_jButton1ActionPerformed
//action performed when door-3(button3) is clicked
//This method creates third door and sets the background color with randomly changing the image and has event as parameter
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        choosenText.setText("Door-3");
        jButton3.setBackground(Color.DARK_GRAY);
        jButton2.setEnabled(false);
        jButton1.setEnabled(false);
        if(car==0){
              ImageIcon background = new ImageIcon("src\\"+IMAGE_PATHS[1]);
              jButton2.setIcon(background);
              jButton2.setDisabledIcon(background);
        opdoor="Door2";
        }
        else{
        
        jButton1.setIcon(new ImageIcon("src\\"+IMAGE_PATHS[0]));
        jButton1.setDisabledIcon(new ImageIcon("src\\"+IMAGE_PATHS[0]));
        opdoor="Door1";
        }
       
        seldoor="Door3";
    }//GEN-LAST:event_jButton3ActionPerformed
//action performed when swap button is clicked
//This method handles the swap action, when the user click on swap button the user selection will be swapped and has event as parameter
    private void swapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swapButtonActionPerformed
        // TODO add your handling code here:
        if(jButton1.isEnabled()||jButton2.isEnabled()||jButton3.isEnabled()){
        totalTextField.setText("" + (Integer.parseInt(totalTextField.getText())+1));
          
        KeepButton.setEnabled(false);
        int temp=0;
        if(seldoor.equals("Door1")){
            jButton1.setBackground(Color.LIGHT_GRAY);
        if(opdoor.equals("Door2")){
            jButton3.setBackground(Color.DARK_GRAY);//highlight button
            choosenText.setText("Door-3");
            //door3 is selected
            if(car==2){            //win
            temp=1; //temp=Integer.parseInt(winTextField.getText());temp++;
             winTextField.setText("" + (Integer.parseInt(winTextField.getText())+1)); 
            }
            else{//loss
                temp=0;
                lossTextField.setText("" + (Integer.parseInt(lossTextField.getText())+1));
            }
        }else{
            //door2 is selected
            jButton2.setBackground(Color.DARK_GRAY);//highlight button
            choosenText.setText("Door-2");
             if(car==1){
            //win             //temp=Integer.parseInt(winTextField.getText());temp++;
             temp=1;             //temp=Integer.parseInt(winTextField.getText());temp++;
             winTextField.setText("" + (Integer.parseInt(winTextField.getText())+1));
            }
            else{                //loss
                temp=0;
                lossTextField.setText("" + (Integer.parseInt(lossTextField.getText())+1));
            }
        }
   }
        if(seldoor.equals("Door2")){
            jButton2.setBackground(Color.LIGHT_GRAY);
        if(opdoor.equals("Door1")){            //door3 is selected
            jButton3.setBackground(Color.DARK_GRAY);
            choosenText.setText("Door-3");//door3 is selected
            if(car==2){            //win
             temp=1;             //temp=Integer.parseInt(winTextField.getText());temp++;
             winTextField.setText("" + (Integer.parseInt(winTextField.getText())+1));
            }
            else{//loss
                temp=0;
                lossTextField.setText("" + (Integer.parseInt(lossTextField.getText())+1));
            }
        }else{
            jButton1.setBackground(Color.DARK_GRAY);
            choosenText.setText("Door-1");//door1 is selected
             if(car==0){            //win
             temp=1;             //temp=Integer.parseInt(winTextField.getText());temp++;
             winTextField.setText("" + (Integer.parseInt(winTextField.getText())+1));
            }
            else{                //loss
                temp=0;
                lossTextField.setText("" + (Integer.parseInt(lossTextField.getText())+1));
            }        
        }
     }
        if(seldoor.equals("Door3")){
            jButton3.setBackground(Color.LIGHT_GRAY);
        if(opdoor.equals("Door2")){
            jButton1.setBackground(Color.DARK_GRAY);   
            choosenText.setText("Door-1");//door1 is selected
            if(car==0){//win
                temp=1; //temp=Integer.parseInt(winTextField.getText());temp++;
             winTextField.setText("" + (Integer.parseInt(winTextField.getText())+1));
            }
            else{                //loss
                temp=0;
                lossTextField.setText("" + (Integer.parseInt(lossTextField.getText())+1));
            }
        }else{
            jButton2.setBackground(Color.DARK_GRAY);
            choosenText.setText("Door-2");//door2 is selected
             if(car==1){ //win
                 temp=1;//temp=Integer.parseInt(winTextField.getText());temp++;
             winTextField.setText("" + (Integer.parseInt(winTextField.getText())+1));
            }
            else{                //loss
                temp=0;
                lossTextField.setText("" + (Integer.parseInt(lossTextField.getText())+1));
            }
        }
    }   
        //reveal all image behind the door
         ImageIcon background = new ImageIcon("src\\"+IMAGE_PATHS[0]);
        jButton1.setIcon(background);
        jButton1.setDisabledIcon(background);
        
         ImageIcon background1 = new ImageIcon("src\\"+IMAGE_PATHS[1]);
        jButton2.setIcon(background1);
        jButton2.setDisabledIcon(background1);
        
         ImageIcon background2 = new ImageIcon("src\\"+IMAGE_PATHS[2]);
        jButton3.setIcon(background2);
        jButton3.setDisabledIcon(background2);
        //display win or loss message
        if(temp!=0)
        JOptionPane.showMessageDialog(null, "Congragulations!!! Your prediction Won");
        else
        JOptionPane.showMessageDialog(null, "Sorry!!! Why don't you try again"); 
    }
    }//GEN-LAST:event_swapButtonActionPerformed
//action performed when keep button is clicked
//This method handles the keep action, when the user click on keep button the user selection will be kept the same, this method takes event as parameter
    private void KeepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeepButtonActionPerformed
        // TODO add your handling code here:
        if(jButton1.isEnabled()||jButton2.isEnabled()||jButton3.isEnabled()){
        totalTextField.setText("" + (Integer.parseInt(totalTextField.getText())+1));
       
        swapButton.setEnabled(false);
        int temp=0;
        if(seldoor.equals("Door1")){//check door1 is a win or loss
            if(car==0){            //win
            temp=1; 
             winTextField.setText("" + (Integer.parseInt(winTextField.getText())+1));
            }
            else{//loss
                temp=0;
                lossTextField.setText("" + (Integer.parseInt(lossTextField.getText())+1));
            }
        }
        if(seldoor.equals("Door2")){//check door2 is a win or loss
             if(car==1){            //win
            temp=1; 
             winTextField.setText("" + (Integer.parseInt(winTextField.getText())+1));
            }
            else{//loss
                temp=0;
                lossTextField.setText("" + (Integer.parseInt(lossTextField.getText())+1));
            }
        }
        if(seldoor.equals("Door3")){//check door3 is a win or loss
             if(car==2){            //win
            temp=1; 
             winTextField.setText("" + (Integer.parseInt(winTextField.getText())+1));
            }
            else{//loss
                temp=0;
                lossTextField.setText("" + (Integer.parseInt(lossTextField.getText())+1));
            }
        }
        //reveal image
        //Below are the steps to keep the background images for the doors
         ImageIcon background = new ImageIcon("src\\"+IMAGE_PATHS[0]);
        jButton1.setIcon(background);
        jButton1.setDisabledIcon(background);
        
         ImageIcon background1 = new ImageIcon("src\\"+IMAGE_PATHS[1]);
        jButton2.setIcon(background1);
        jButton2.setDisabledIcon(background1);
        
         ImageIcon background2 = new ImageIcon("src\\"+IMAGE_PATHS[2]);
        jButton3.setIcon(background2);
        jButton3.setDisabledIcon(background2);
        //If else  loop methode to check win or loss message
        if(temp!=0)
        JOptionPane.showMessageDialog(null, "Congragulations!!! Your prediction Won");
        else
        JOptionPane.showMessageDialog(null, "Sorry!!!Why don't you try again");    
    }//GEN-LAST:event_KeepButtonActionPerformed
    }
    //Below metohd is to describe the play again option
    private void againButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_againButtonActionPerformed
        // TODO add your handling code here:
         choosenText.setText(" ");

         if(!jButton1.isEnabled())       jButton1.setEnabled(true);

         if(!jButton2.isEnabled())      jButton2.setEnabled(true);
         
         if(!jButton3.isEnabled())     jButton3.setEnabled(true);
         
         if(!swapButton.isEnabled())     swapButton.setEnabled(true);
         
         if(!KeepButton.isEnabled())     KeepButton.setEnabled(true);
         
        jButton1.setIcon(null);
        jButton2.setIcon(null);
        jButton3.setIcon(null);
        
        jButton1.setDisabledIcon(null);
        jButton2.setDisabledIcon(null);
        jButton3.setDisabledIcon(null);
        
        jButton1.setBackground(Color.LIGHT_GRAY);
        jButton2.setBackground(Color.LIGHT_GRAY);
        jButton3.setBackground(Color.LIGHT_GRAY);
       
        for(int i=0;i<3;i++){
        IMAGE_PATHS[i]="pic1.jpg";
        }
        genrandomimage();
    }//GEN-LAST:event_againButtonActionPerformed

   //**Main method**//
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(doors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(doors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(doors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(doors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new doors().setVisible(true);
            }
        });
        //callin class doors
        new doors();
   
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton KeepButton;
    private javax.swing.JButton againButton;
    private javax.swing.JTextField choosenText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField lossTextField;
    private javax.swing.JLabel lostLabel;
    private javax.swing.JButton swapButton;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JTextField totalTextField;
    private javax.swing.JLabel winLabel;
    private javax.swing.JTextField winTextField;
    // End of variables declaration//GEN-END:variables


}
